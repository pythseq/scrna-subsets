

rule alt_species_featureCount_hisat_dedup: 
  input: 
    "{projects}/hisat2/mouse/{cell}/{cell}_sorted_dedup.bam"
  output:
    "{projects}/hisat2/mouse/feature_counts/{cell}_sorted_dedup.tsv"
  params:
    job_name = "{project.fCount}",
    memory = "select[mem>25] rusage[mem=25]",
  threads:
    4
  log:
    "{projects}/hisat2/mouse/feature_counts/logs/{cell}_dedup_counts.txt"
  shell:
    " featureCounts -s 1 -T {threads} -t exon -Q 10 -g gene_name -a {TRANSCRIPTS_MOUSE} -o {output} {input} "

rule alt_species_featureCount_hisat: 
  input: 
    "{projects}/hisat2/mouse/{cell}/{cell}_sorted.bam"
  output:
    "{projects}/hisat2/mouse/feature_counts/{cell}_sorted.tsv"
  params:
    job_name = "{project.fCount}",
    memory = "select[mem>25] rusage[mem=25]",
  threads:
    4
  log:
    "{projects}/hisat2/mouse/feature_counts/logs/{cell}_sorted_counts.txt"
  shell:
    " featureCounts -s 1 -T {threads} -t exon -Q 10 -g gene_name -a {TRANSCRIPTS_MOUSE} -o {output} {input} "



rule alt_species_hisat_umi_tools_dedup:
  input:
    bam = "{projects}/hisat2/mouse/{cell}/{cell}_sorted.bam",
    idx = "{projects}/hisat2/mouse/{cell}/{cell}_sorted.bam.bai"
  output:
    "{projects}/hisat2/mouse/{cell}/{cell}_sorted_dedup.bam"
  params:
    job_name = "{project.dedup}",
    memory = "select[mem>20] rusage[mem=20] span[hosts=1]",
  log:
    "{projects}/hisat2/mouse/logs/umi_dedup/{cell}"
  shell:
    """
    lines=$(samtools idxstats {input.bam} | awk '{{sum+=$3}} END {{print sum}}') 
    if [[ "$lines" -gt 0 ]] 
    then
      umi_tools dedup --method 'directional-adjacency' --output-stats {log} --log2stderr -I {input.bam} > {output} 
    else
      cp {input.bam} {output}
    fi
    """

rule alt_species_hisat_bam_idx:
  input:
    "{projects}/hisat2/mouse/{cell}/{cell}_sorted.bam"
  output:
    "{projects}/hisat2/mouse/{cell}/{cell}_sorted.bam.bai"
  params:
    job_name = "{projects}.bam_idx",
    memory = "select[mem>4] rusage[mem=4]",
  log:
    "{projects}/hisat2/mouse/{cell}/logs/{cell}_ixd.txt"
  shell:
    " samtools index -b {input} 2> {log}"


rule alt_species_hisat2_bam_sort:
  input:
    "{projects}/hisat2/mouse/{cell}/{cell}.bam"
  output:
    "{projects}/hisat2/mouse/{cell}/{cell}_sorted.bam"
  params:
    job_name = "{projects}.bam_sort",
    memory = "select[mem>4] rusage[mem=4]",
  log:
    "{projects}/hisat2/mouse/{cell}/bam/log/{cell}_sort.txt"
  shell:
    " samtools sort {input} -o {output} 2> {log}"

  
rule alt_species_hisat2:
  input:
    "{projects}/fastq/demultiplexed/R2/{cell}_trimmed_umi.fastq.gz"
  output:
    bam = "{projects}/hisat2/mouse/{cell}/{cell}.bam",
  params:
    job_name = "{project.hisat2}",
    memory = "select[mem>8] rusage[mem=8]",
  log:
    "{projects}/hisat2/mouse/{cell}/log/align.txt"
  threads: 6
  shell:
    " hisat2 -p {threads} --rna-strandness F -q -U {input} "
    " -x {HISAT2_IDX_MOUSE} --met-file {log} "
    " | samtools view -bS - > {output.bam} "


